plugins {
    id "org.asciidoctor.convert" version "1.5.10"
}

dependencies {
    compile project(':todo-item')

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

task cloneSubmodule(type: Exec) {
    workingDir "./"
    commandLine 'git', 'submodule', 'init'
    commandLine 'git', 'submodule', 'update'
    commandLine 'git', 'submodule', 'foreach', 'git', 'pull', 'origin', 'master'
}

//task buildFrontEnd(type: Exec) {
//    workingDir "./src/front"
//    commandLine 'npm', 'install'
//    commandLine 'npm', 'run', 'build'
//}

task buildPublish() {
    dependsOn 'cloneSubmodule'
//    dependsOn 'buildFrontEnd'
}

processResources.dependsOn 'buildPublish'

ext {
    snippetsDir = file('build/generated-snippets')
    apiDocsDir = file('src/main/resources/static/docs')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
    finalizedBy asciidoctor
}

asciidoctor {
    inputs.dir snippetsDir
    finalizedBy bootJar
}

bootJar {
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    finalizedBy('copyApiDocs')
}

task copyApiDocs(type: Copy) {
    copy {
        from("${asciidoctor.outputDir}/html5") {
            include "*.html"
        }
        into apiDocsDir
    }
}